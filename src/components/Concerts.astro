---
import {getEntry} from "astro:content";
import {getCollection} from "astro:content";

const concertGroups = await getEntry("concerts", "concerts");

const concerts = concertGroups?.data ?? [];

const totalEvenues = concerts.reduce((acc, concert) => {
  return acc + concert.concerts.length;
}, 0);
---

<!-- Leaflet CSS -->
<link
  rel="stylesheet"
  href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
/>

<!-- Leaflet JS -->
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" defer></script>

<section
  class="py-12 px-4 bg-gray-900 text-white bg-ameri bg-cover bg-center bg-blend-lighten"
>
  <h2
    class="text-3xl sm:text-4xl font-extrabold text-center mb-8 tracking-tight"
  >
    üó∫Ô∏è Mapa de conciertos ({totalEvenues})
  </h2>

  <!-- MAPA -->
  <div
    id="map"
    class="w-full h-[400px] sm:h-[500px] rounded-xl overflow-hidden shadow-xl border border-gray-700"
  >
  </div>

  <!-- MODAL -->
  <div
    id="concertModal"
    class="fixed inset-0 z-[9999] bg-black/60 backdrop-blur-sm flex items-center justify-center px-6 py-10 hidden animate-fadeIn"
    role="dialog"
    aria-modal="true"
    aria-labelledby="modalCity"
    aria-describedby="modalConcerts"
  >
    <div
      class="bg-white text-gray-900 w-full max-w-md p-6 rounded-3xl shadow-[0_10px_30px_rgba(200,2,40,0.2)] relative flex flex-col"
    >
      <!-- Bot√≥n de cerrar -->
      <button
        onclick="closeModal()"
        class="absolute top-4 right-4 text-gray-400 hover:text-ameri-60 focus:outline-none focus:ring-2 focus:ring-ameri-40 rounded transition"
        aria-label="Cerrar modal"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-7 w-7"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          stroke-width="2"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>

      <!-- Info del lugar -->
      <div class="mb-6 text-center">
        <h3 id="modalCity" class="font-bold text-3xl tracking-wide font-sans">
        </h3>
        <p id="modalCountry" class="text-ameri-80 text-sm mt-1 font-medium"></p>
      </div>

      <!-- Lista de conciertos -->
      <div
        id="modalConcerts"
        class="space-y-5 max-h-[320px] overflow-y-auto pr-3 scrollbar-thin scrollbar-thumb-purple-400 scrollbar-track-gray-100"
      >
        <!-- JS inyecta eventos ac√° -->
      </div>
    </div>
  </div>

  <!-- JSON oculto -->
  <div id="concert-data" class="hidden" data-json={JSON.stringify(concerts)}>
  </div>
</section>
<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .animate-fadeIn {
    animation: fadeIn 0.3s ease forwards;
  }
  /* Scrollbar personalizado para Firefox */
  #concertModal #modalConcerts {
    scrollbar-width: thin;
    scrollbar-color: #555555 #f3f4f6;
  }
  /* Scrollbar personalizado para Chrome, Edge y Safari */
  #concertModal #modalConcerts::-webkit-scrollbar {
    width: 6px;
  }
  #concertModal #modalConcerts::-webkit-scrollbar-track {
    background: #f3f4f6;
    border-radius: 10px;
  }
  #concertModal #modalConcerts::-webkit-scrollbar-thumb {
    background-color: #555555;
    border-radius: 10px;
  }
</style>

<script type="module">
  document.addEventListener("DOMContentLoaded", () => {
    const dataEl = document.getElementById("concert-data");
    const jsonString = dataEl?.dataset?.json;

    let concerts = [];

    try {
      concerts = JSON.parse(jsonString);
    } catch (e) {
      console.error("Error al parsear los datos de conciertos:", e);
      return;
    }

    if (!Array.isArray(concerts)) {
      console.error("Los datos de conciertos no son v√°lidos");
      return;
    }

    // Iniciar Leaflet
    const map = L.map("map").setView([0, 0], 2);

    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      attribution:
        'Map data ¬© <a href="https://openstreetmap.org">OpenStreetMap</a> contributors',
    }).addTo(map);

    concerts.forEach((concert) => {
      const marker = L.marker([concert.coords.lat, concert.coords.long]).addTo(
        map
      );
      marker.on("click", () => {
        openModal(concert);
      });
    });

    function openModal(concert) {
      document.getElementById("concertModal").classList.remove("hidden");
      document.getElementById("modalCity").textContent = concert.city;
      document.getElementById("modalCountry").textContent =
        concert.country === "Argentina" ? "Argentina ‚≠ê‚≠ê‚≠ê" : concert.country;

      if (concert.country === "Argentina") {
        document.getElementById("modalCountry").classList.add("text-argentina");
      } else {
        document
          .getElementById("modalCountry")
          .classList.remove("text-argentina");
      }

      const concertsList = document.getElementById("modalConcerts");
      concertsList.innerHTML = "";

      concert.concerts.forEach((c) => {
        const div = document.createElement("div");
        div.classList.add("p-3", "border", "border-gray-300", "rounded");
        div.innerHTML = `
          <h4 class="font-semibold">${c.eventDate}</h4>
          <p class="text-sm">Establecimiento: ${c.venueName}</p>
          <p class="text-sm italic text-gray-600">Tour: ${c.tourName}</p>
        `;
        concertsList.appendChild(div);
      });
    }

    window.closeModal = function () {
      document.getElementById("concertModal").classList.add("hidden");
    };
  });
</script>
